/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ecrf.user.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CRFAutoquery service. Represents a row in the &quot;EC_CRFAutoquery&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>ecrf.user.model.impl.CRFAutoqueryModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>ecrf.user.model.impl.CRFAutoqueryImpl</code>.
 * </p>
 *
 * @author Ryu W.C.
 * @see CRFAutoquery
 * @generated
 */
@ProviderType
public interface CRFAutoqueryModel
	extends BaseModel<CRFAutoquery>, GroupedModel, MVCCModel, ShardedModel,
			StagedAuditedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a crf autoquery model instance should use the {@link CRFAutoquery} interface instead.
	 */

	/**
	 * Returns the primary key of this crf autoquery.
	 *
	 * @return the primary key of this crf autoquery
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this crf autoquery.
	 *
	 * @param primaryKey the primary key of this crf autoquery
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this crf autoquery.
	 *
	 * @return the mvcc version of this crf autoquery
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this crf autoquery.
	 *
	 * @param mvccVersion the mvcc version of this crf autoquery
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this crf autoquery.
	 *
	 * @return the uuid of this crf autoquery
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this crf autoquery.
	 *
	 * @param uuid the uuid of this crf autoquery
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the auto query ID of this crf autoquery.
	 *
	 * @return the auto query ID of this crf autoquery
	 */
	public long getAutoQueryId();

	/**
	 * Sets the auto query ID of this crf autoquery.
	 *
	 * @param autoQueryId the auto query ID of this crf autoquery
	 */
	public void setAutoQueryId(long autoQueryId);

	/**
	 * Returns the group ID of this crf autoquery.
	 *
	 * @return the group ID of this crf autoquery
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this crf autoquery.
	 *
	 * @param groupId the group ID of this crf autoquery
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this crf autoquery.
	 *
	 * @return the company ID of this crf autoquery
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this crf autoquery.
	 *
	 * @param companyId the company ID of this crf autoquery
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this crf autoquery.
	 *
	 * @return the user ID of this crf autoquery
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this crf autoquery.
	 *
	 * @param userId the user ID of this crf autoquery
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this crf autoquery.
	 *
	 * @return the user uuid of this crf autoquery
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this crf autoquery.
	 *
	 * @param userUuid the user uuid of this crf autoquery
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this crf autoquery.
	 *
	 * @return the user name of this crf autoquery
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this crf autoquery.
	 *
	 * @param userName the user name of this crf autoquery
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this crf autoquery.
	 *
	 * @return the create date of this crf autoquery
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this crf autoquery.
	 *
	 * @param createDate the create date of this crf autoquery
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this crf autoquery.
	 *
	 * @return the modified date of this crf autoquery
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this crf autoquery.
	 *
	 * @param modifiedDate the modified date of this crf autoquery
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this crf autoquery.
	 *
	 * @return the status of this crf autoquery
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this crf autoquery.
	 *
	 * @param status the status of this crf autoquery
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this crf autoquery.
	 *
	 * @return the status by user ID of this crf autoquery
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this crf autoquery.
	 *
	 * @param statusByUserId the status by user ID of this crf autoquery
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this crf autoquery.
	 *
	 * @return the status by user uuid of this crf autoquery
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this crf autoquery.
	 *
	 * @param statusByUserUuid the status by user uuid of this crf autoquery
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this crf autoquery.
	 *
	 * @return the status by user name of this crf autoquery
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this crf autoquery.
	 *
	 * @param statusByUserName the status by user name of this crf autoquery
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this crf autoquery.
	 *
	 * @return the status date of this crf autoquery
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this crf autoquery.
	 *
	 * @param statusDate the status date of this crf autoquery
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the subject ID of this crf autoquery.
	 *
	 * @return the subject ID of this crf autoquery
	 */
	public long getSubjectId();

	/**
	 * Sets the subject ID of this crf autoquery.
	 *
	 * @param subjectId the subject ID of this crf autoquery
	 */
	public void setSubjectId(long subjectId);

	/**
	 * Returns the crf ID of this crf autoquery.
	 *
	 * @return the crf ID of this crf autoquery
	 */
	public long getCrfId();

	/**
	 * Sets the crf ID of this crf autoquery.
	 *
	 * @param crfId the crf ID of this crf autoquery
	 */
	public void setCrfId(long crfId);

	/**
	 * Returns the query term ID of this crf autoquery.
	 *
	 * @return the query term ID of this crf autoquery
	 */
	public long getQueryTermId();

	/**
	 * Sets the query term ID of this crf autoquery.
	 *
	 * @param queryTermId the query term ID of this crf autoquery
	 */
	public void setQueryTermId(long queryTermId);

	/**
	 * Returns the query term name of this crf autoquery.
	 *
	 * @return the query term name of this crf autoquery
	 */
	@AutoEscape
	public String getQueryTermName();

	/**
	 * Sets the query term name of this crf autoquery.
	 *
	 * @param queryTermName the query term name of this crf autoquery
	 */
	public void setQueryTermName(String queryTermName);

	/**
	 * Returns the query value of this crf autoquery.
	 *
	 * @return the query value of this crf autoquery
	 */
	@AutoEscape
	public String getQueryValue();

	/**
	 * Sets the query value of this crf autoquery.
	 *
	 * @param queryValue the query value of this crf autoquery
	 */
	public void setQueryValue(String queryValue);

	/**
	 * Returns the query previous value of this crf autoquery.
	 *
	 * @return the query previous value of this crf autoquery
	 */
	@AutoEscape
	public String getQueryPreviousValue();

	/**
	 * Sets the query previous value of this crf autoquery.
	 *
	 * @param queryPreviousValue the query previous value of this crf autoquery
	 */
	public void setQueryPreviousValue(String queryPreviousValue);

	/**
	 * Returns the query type of this crf autoquery.
	 *
	 * @return the query type of this crf autoquery
	 */
	public int getQueryType();

	/**
	 * Sets the query type of this crf autoquery.
	 *
	 * @param queryType the query type of this crf autoquery
	 */
	public void setQueryType(int queryType);

	/**
	 * Returns the query comment of this crf autoquery.
	 *
	 * @return the query comment of this crf autoquery
	 */
	@AutoEscape
	public String getQueryComment();

	/**
	 * Sets the query comment of this crf autoquery.
	 *
	 * @param queryComment the query comment of this crf autoquery
	 */
	public void setQueryComment(String queryComment);

	/**
	 * Returns the query comfirm of this crf autoquery.
	 *
	 * @return the query comfirm of this crf autoquery
	 */
	public int getQueryComfirm();

	/**
	 * Sets the query comfirm of this crf autoquery.
	 *
	 * @param queryComfirm the query comfirm of this crf autoquery
	 */
	public void setQueryComfirm(int queryComfirm);

	/**
	 * Returns the query comfirm user ID of this crf autoquery.
	 *
	 * @return the query comfirm user ID of this crf autoquery
	 */
	public long getQueryComfirmUserId();

	/**
	 * Sets the query comfirm user ID of this crf autoquery.
	 *
	 * @param queryComfirmUserId the query comfirm user ID of this crf autoquery
	 */
	public void setQueryComfirmUserId(long queryComfirmUserId);

	/**
	 * Returns the query comfirm user uuid of this crf autoquery.
	 *
	 * @return the query comfirm user uuid of this crf autoquery
	 */
	public String getQueryComfirmUserUuid();

	/**
	 * Sets the query comfirm user uuid of this crf autoquery.
	 *
	 * @param queryComfirmUserUuid the query comfirm user uuid of this crf autoquery
	 */
	public void setQueryComfirmUserUuid(String queryComfirmUserUuid);

	/**
	 * Returns the query comfirm user name of this crf autoquery.
	 *
	 * @return the query comfirm user name of this crf autoquery
	 */
	@AutoEscape
	public String getQueryComfirmUserName();

	/**
	 * Sets the query comfirm user name of this crf autoquery.
	 *
	 * @param queryComfirmUserName the query comfirm user name of this crf autoquery
	 */
	public void setQueryComfirmUserName(String queryComfirmUserName);

	/**
	 * Returns the query comfirm date of this crf autoquery.
	 *
	 * @return the query comfirm date of this crf autoquery
	 */
	public Date getQueryComfirmDate();

	/**
	 * Sets the query comfirm date of this crf autoquery.
	 *
	 * @param queryComfirmDate the query comfirm date of this crf autoquery
	 */
	public void setQueryComfirmDate(Date queryComfirmDate);

	/**
	 * Returns <code>true</code> if this crf autoquery is approved.
	 *
	 * @return <code>true</code> if this crf autoquery is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this crf autoquery is denied.
	 *
	 * @return <code>true</code> if this crf autoquery is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this crf autoquery is a draft.
	 *
	 * @return <code>true</code> if this crf autoquery is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this crf autoquery is expired.
	 *
	 * @return <code>true</code> if this crf autoquery is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this crf autoquery is inactive.
	 *
	 * @return <code>true</code> if this crf autoquery is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this crf autoquery is incomplete.
	 *
	 * @return <code>true</code> if this crf autoquery is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this crf autoquery is pending.
	 *
	 * @return <code>true</code> if this crf autoquery is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this crf autoquery is scheduled.
	 *
	 * @return <code>true</code> if this crf autoquery is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}