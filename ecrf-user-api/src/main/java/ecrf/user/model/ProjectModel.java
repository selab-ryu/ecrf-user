/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ecrf.user.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Project service. Represents a row in the &quot;EC_Project&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>ecrf.user.model.impl.ProjectModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>ecrf.user.model.impl.ProjectImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Project
 * @generated
 */
@ProviderType
public interface ProjectModel
	extends BaseModel<Project>, ShardedModel, StagedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a project model instance should use the {@link Project} interface instead.
	 */

	/**
	 * Returns the primary key of this project.
	 *
	 * @return the primary key of this project
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this project.
	 *
	 * @param primaryKey the primary key of this project
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this project.
	 *
	 * @return the uuid of this project
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this project.
	 *
	 * @param uuid the uuid of this project
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the project ID of this project.
	 *
	 * @return the project ID of this project
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this project.
	 *
	 * @param projectId the project ID of this project
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the group ID of this project.
	 *
	 * @return the group ID of this project
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this project.
	 *
	 * @param groupId the group ID of this project
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this project.
	 *
	 * @return the company ID of this project
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this project.
	 *
	 * @param companyId the company ID of this project
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create user ID of this project.
	 *
	 * @return the create user ID of this project
	 */
	public long getCreateUserId();

	/**
	 * Sets the create user ID of this project.
	 *
	 * @param createUserId the create user ID of this project
	 */
	public void setCreateUserId(long createUserId);

	/**
	 * Returns the create user uuid of this project.
	 *
	 * @return the create user uuid of this project
	 */
	public String getCreateUserUuid();

	/**
	 * Sets the create user uuid of this project.
	 *
	 * @param createUserUuid the create user uuid of this project
	 */
	public void setCreateUserUuid(String createUserUuid);

	/**
	 * Returns the create user name of this project.
	 *
	 * @return the create user name of this project
	 */
	@AutoEscape
	public String getCreateUserName();

	/**
	 * Sets the create user name of this project.
	 *
	 * @param createUserName the create user name of this project
	 */
	public void setCreateUserName(String createUserName);

	/**
	 * Returns the create date of this project.
	 *
	 * @return the create date of this project
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this project.
	 *
	 * @param createDate the create date of this project
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this project.
	 *
	 * @return the modified date of this project
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this project.
	 *
	 * @param modifiedDate the modified date of this project
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this project.
	 *
	 * @return the status of this project
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this project.
	 *
	 * @param status the status of this project
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this project.
	 *
	 * @return the status by user ID of this project
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this project.
	 *
	 * @param statusByUserId the status by user ID of this project
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this project.
	 *
	 * @return the status by user uuid of this project
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this project.
	 *
	 * @param statusByUserUuid the status by user uuid of this project
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this project.
	 *
	 * @return the status by user name of this project
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this project.
	 *
	 * @param statusByUserName the status by user name of this project
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this project.
	 *
	 * @return the status date of this project
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this project.
	 *
	 * @param statusDate the status date of this project
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the title of this project.
	 *
	 * @return the title of this project
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this project.
	 *
	 * @param title the title of this project
	 */
	public void setTitle(String title);

	/**
	 * Returns the short title of this project.
	 *
	 * @return the short title of this project
	 */
	@AutoEscape
	public String getShortTitle();

	/**
	 * Sets the short title of this project.
	 *
	 * @param shortTitle the short title of this project
	 */
	public void setShortTitle(String shortTitle);

	/**
	 * Returns the purpose of this project.
	 *
	 * @return the purpose of this project
	 */
	@AutoEscape
	public String getPurpose();

	/**
	 * Sets the purpose of this project.
	 *
	 * @param purpose the purpose of this project
	 */
	public void setPurpose(String purpose);

	/**
	 * Returns the start date of this project.
	 *
	 * @return the start date of this project
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this project.
	 *
	 * @param startDate the start date of this project
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this project.
	 *
	 * @return the end date of this project
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this project.
	 *
	 * @param endDate the end date of this project
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the principal researcher ID of this project.
	 *
	 * @return the principal researcher ID of this project
	 */
	public long getPrincipalResearcherId();

	/**
	 * Sets the principal researcher ID of this project.
	 *
	 * @param principalResearcherId the principal researcher ID of this project
	 */
	public void setPrincipalResearcherId(long principalResearcherId);

	/**
	 * Returns the manage researcher ID of this project.
	 *
	 * @return the manage researcher ID of this project
	 */
	public long getManageResearcherId();

	/**
	 * Sets the manage researcher ID of this project.
	 *
	 * @param manageResearcherId the manage researcher ID of this project
	 */
	public void setManageResearcherId(long manageResearcherId);

	/**
	 * Returns <code>true</code> if this project is approved.
	 *
	 * @return <code>true</code> if this project is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this project is denied.
	 *
	 * @return <code>true</code> if this project is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this project is a draft.
	 *
	 * @return <code>true</code> if this project is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this project is expired.
	 *
	 * @return <code>true</code> if this project is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this project is inactive.
	 *
	 * @return <code>true</code> if this project is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this project is incomplete.
	 *
	 * @return <code>true</code> if this project is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this project is pending.
	 *
	 * @return <code>true</code> if this project is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this project is scheduled.
	 *
	 * @return <code>true</code> if this project is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}